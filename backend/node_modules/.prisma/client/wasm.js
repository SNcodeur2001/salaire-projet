
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  entrepriseId: 'entrepriseId'
};

exports.Prisma.EntrepriseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  logo: 'logo',
  address: 'address',
  currency: 'currency',
  periodType: 'periodType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  poste: 'poste',
  contract: 'contract',
  baseSalary: 'baseSalary',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  entrepriseId: 'entrepriseId',
  userId: 'userId'
};

exports.Prisma.PayrollCycleScalarFieldEnum = {
  id: 'id',
  period: 'period',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  entrepriseId: 'entrepriseId'
};

exports.Prisma.PayslipScalarFieldEnum = {
  id: 'id',
  grossSalary: 'grossSalary',
  deductions: 'deductions',
  netSalary: 'netSalary',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  employeeId: 'employeeId',
  cycleId: 'cycleId'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  mode: 'mode',
  paymentDate: 'paymentDate',
  receiptUrl: 'receiptUrl',
  payslipId: 'payslipId',
  caissierId: 'caissierId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  entrepriseId: 'entrepriseId'
};

exports.Prisma.EntrepriseOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  logo: 'logo',
  address: 'address',
  currency: 'currency',
  periodType: 'periodType'
};

exports.Prisma.EmployeeOrderByRelevanceFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  poste: 'poste',
  entrepriseId: 'entrepriseId',
  userId: 'userId'
};

exports.Prisma.PayrollCycleOrderByRelevanceFieldEnum = {
  id: 'id',
  period: 'period',
  entrepriseId: 'entrepriseId'
};

exports.Prisma.PayslipOrderByRelevanceFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  cycleId: 'cycleId'
};

exports.Prisma.PaymentOrderByRelevanceFieldEnum = {
  id: 'id',
  mode: 'mode',
  receiptUrl: 'receiptUrl',
  payslipId: 'payslipId',
  caissierId: 'caissierId'
};
exports.Role = exports.$Enums.Role = {
  SUPER_ADMIN: 'SUPER_ADMIN',
  ADMIN: 'ADMIN',
  CAISSIER: 'CAISSIER',
  EMPLOYE: 'EMPLOYE'
};

exports.ContractType = exports.$Enums.ContractType = {
  JOURNALIER: 'JOURNALIER',
  FIXE: 'FIXE',
  HONORAIRE: 'HONORAIRE'
};

exports.PayrunStatus = exports.$Enums.PayrunStatus = {
  BROUILLON: 'BROUILLON',
  APPROUVE: 'APPROUVE',
  CLOS: 'CLOS'
};

exports.PayslipStatus = exports.$Enums.PayslipStatus = {
  EN_ATTENTE: 'EN_ATTENTE',
  PARTIEL: 'PARTIEL',
  PAYE: 'PAYE'
};

exports.Prisma.ModelName = {
  User: 'User',
  Entreprise: 'Entreprise',
  Employee: 'Employee',
  PayrollCycle: 'PayrollCycle',
  Payslip: 'Payslip',
  Payment: 'Payment'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/mapath-ndiaye/Documents/React/projet salire /auth-app/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/mapath-ndiaye/Documents/React/projet salire /auth-app/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\" // ou \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  SUPER_ADMIN\n  ADMIN\n  CAISSIER\n  EMPLOYE\n}\n\nenum ContractType {\n  JOURNALIER\n  FIXE\n  HONORAIRE\n}\n\nenum PayrunStatus {\n  BROUILLON\n  APPROUVE\n  CLOS\n}\n\nenum PayslipStatus {\n  EN_ATTENTE\n  PARTIEL\n  PAYE\n}\n\nmodel User {\n  id        String   @id @default(uuid())\n  email     String   @unique\n  password  String\n  role      Role     @default(EMPLOYE)\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  entrepriseId String? // null pour super-admin\n  entreprise   Entreprise? @relation(fields: [entrepriseId], references: [id])\n  employee     Employee? // si l'utilisateur est aussi un employé\n  payments     Payment[]   @relation(\"CaissierPayments\")\n}\n\nmodel Entreprise {\n  id         String   @id @default(uuid())\n  name       String\n  logo       String?\n  address    String?\n  currency   String\n  periodType String // mensuelle / hebdo / journalière\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  // Relations\n  users     User[]\n  employees Employee[]\n  payruns   PayrollCycle[]\n}\n\nmodel Employee {\n  id         String       @id @default(uuid())\n  firstName  String\n  lastName   String\n  poste      String\n  contract   ContractType\n  baseSalary Float\n  isActive   Boolean      @default(true)\n  createdAt  DateTime     @default(now())\n  updatedAt  DateTime     @updatedAt\n\n  // Relations\n  entrepriseId String\n  entreprise   Entreprise @relation(fields: [entrepriseId], references: [id])\n  userId       String?    @unique\n  user         User?      @relation(fields: [userId], references: [id])\n  payslips     Payslip[]\n}\n\nmodel PayrollCycle {\n  id        String       @id @default(uuid())\n  period    String // ex: 2025-09, ou \"Semaine 39\"\n  status    PayrunStatus @default(BROUILLON)\n  createdAt DateTime     @default(now())\n  updatedAt DateTime     @updatedAt\n\n  // Relations\n  entrepriseId String\n  entreprise   Entreprise @relation(fields: [entrepriseId], references: [id])\n  payslips     Payslip[]\n}\n\nmodel Payslip {\n  id          String        @id @default(uuid())\n  grossSalary Float\n  deductions  Float\n  netSalary   Float\n  status      PayslipStatus @default(EN_ATTENTE)\n  createdAt   DateTime      @default(now())\n  updatedAt   DateTime      @updatedAt\n\n  // Relations\n  employeeId String\n  employee   Employee     @relation(fields: [employeeId], references: [id])\n  cycleId    String\n  cycle      PayrollCycle @relation(fields: [cycleId], references: [id])\n  payments   Payment[]\n}\n\nmodel Payment {\n  id          String   @id @default(uuid())\n  amount      Float\n  mode        String // ESPECES, VIREMENT, OM, WAVE, etc.\n  paymentDate DateTime @default(now())\n  receiptUrl  String? // lien vers PDF reçu\n\n  // Relations\n  payslipId  String\n  payslip    Payslip @relation(fields: [payslipId], references: [id])\n  caissierId String\n  caissier   User    @relation(\"CaissierPayments\", fields: [caissierId], references: [id])\n}\n",
  "inlineSchemaHash": "e55a09884c9527db2c4e840412f8a86d5b324ae295bc35bb71f15bf9e3891703",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entrepriseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entreprise\",\"kind\":\"object\",\"type\":\"Entreprise\",\"relationName\":\"EntrepriseToUser\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToUser\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"CaissierPayments\"}],\"dbName\":null},\"Entreprise\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"periodType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EntrepriseToUser\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToEntreprise\"},{\"name\":\"payruns\",\"kind\":\"object\",\"type\":\"PayrollCycle\",\"relationName\":\"EntrepriseToPayrollCycle\"}],\"dbName\":null},\"Employee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"poste\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contract\",\"kind\":\"enum\",\"type\":\"ContractType\"},{\"name\":\"baseSalary\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entrepriseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entreprise\",\"kind\":\"object\",\"type\":\"Entreprise\",\"relationName\":\"EmployeeToEntreprise\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmployeeToUser\"},{\"name\":\"payslips\",\"kind\":\"object\",\"type\":\"Payslip\",\"relationName\":\"EmployeeToPayslip\"}],\"dbName\":null},\"PayrollCycle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"period\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PayrunStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entrepriseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entreprise\",\"kind\":\"object\",\"type\":\"Entreprise\",\"relationName\":\"EntrepriseToPayrollCycle\"},{\"name\":\"payslips\",\"kind\":\"object\",\"type\":\"Payslip\",\"relationName\":\"PayrollCycleToPayslip\"}],\"dbName\":null},\"Payslip\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grossSalary\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deductions\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"netSalary\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PayslipStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToPayslip\"},{\"name\":\"cycleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cycle\",\"kind\":\"object\",\"type\":\"PayrollCycle\",\"relationName\":\"PayrollCycleToPayslip\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToPayslip\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"mode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"receiptUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payslipId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payslip\",\"kind\":\"object\",\"type\":\"Payslip\",\"relationName\":\"PaymentToPayslip\"},{\"name\":\"caissierId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caissier\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CaissierPayments\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

